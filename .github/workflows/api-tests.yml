name: Bookstore API Automation Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Manual trigger with dropdown to select test group
  workflow_dispatch:
    inputs:
      test_group:
        description: 'Test group to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - positive
          - negative
          - smoke

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Determine test command
        id: test_cmd
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TEST_GROUP="${{ github.event.inputs.test_group }}"
          else
            TEST_GROUP="all"
          fi
          
          echo "Selected test group: $TEST_GROUP"
          
          if [ "$TEST_GROUP" = "all" ]; then
            echo "cmd=mvn test" >> $GITHUB_OUTPUT
          elif [ "$TEST_GROUP" = "positive" ]; then
            echo "cmd=mvn test -Dtest=BooksApiPositiveTests" >> $GITHUB_OUTPUT
          elif [ "$TEST_GROUP" = "negative" ]; then
            echo "cmd=mvn test -Dtest=BooksApiNegativeTests" >> $GITHUB_OUTPUT
          elif [ "$TEST_GROUP" = "smoke" ]; then
            echo "cmd=mvn test -Dtest=BooksApiPositiveTests#test_01_GetAllBooks_ShouldReturnAllBooks,BooksApiPositiveTests#test_02_GetBookById_ShouldReturnBook" >> $GITHUB_OUTPUT
          fi
      
      - name: Build Docker image
        run: docker build -t bookstore-api-tests .
      
      - name: Run tests - ${{ steps.test_cmd.outputs.description }}
        continue-on-error: true
        run: docker run --name test-container bookstore-api-tests ${{ steps.test_cmd.outputs.cmd }}
      
      - name: Copy test results from container
        if: always()
        run: docker cp test-container:/app/target ./target
      
      - name: Remove test container
        if: always()
        run: docker rm test-container
      
      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      
      - name: Copy previous allure-history to results
        if: always()
        continue-on-error: true
        run: |
          if [ -d "gh-pages/history" ]; then
            echo "Copying history from gh-pages/history to target/allure-results/history"
            mkdir -p target/allure-results/history
            cp -r gh-pages/history/* target/allure-results/history/ 2>/dev/null || true
          fi
      
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20
      
      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
